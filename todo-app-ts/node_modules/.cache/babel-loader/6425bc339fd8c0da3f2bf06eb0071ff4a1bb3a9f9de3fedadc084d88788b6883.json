{"ast":null,"code":"var _jsxFileName = \"/home/ideas2it/Project_html/react-js/todo-app-ts/src/todo/ToDoForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = ({\n  addTodo\n}) => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const handleChange = e => {\n    setName(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name.trim()) {\n      addTodo(name);\n      setName(\"\");\n    }\n  };\n  useEffect(() => {\n    console.log(\"TodoForm mounted\");\n    return () => {\n      console.log(\"TodoForm unmounted\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: handleChange,\n      placeholder: \"Add todo...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"yFX/thdr3dMdWKRwvTuphhEy2lc=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TodoForm","addTodo","_s","name","setName","handleChange","e","target","value","handleSubmit","preventDefault","trim","console","log","onSubmit","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ideas2it/Project_html/react-js/todo-app-ts/src/todo/ToDoForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\ninterface TodoFormProps {\n  addTodo: (name: string) => void;\n}\n\nconst TodoForm: React.FC<TodoFormProps> = ({ addTodo }) => {\n  const [name, setName] = useState<string>(\"\");\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (name.trim()) {\n      addTodo(name);\n      setName(\"\");\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"TodoForm mounted\");\n    return () => {\n      console.log(\"TodoForm unmounted\");\n    };\n  }, []);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={name}\n        onChange={handleChange}\n        placeholder=\"Add todo...\"\n      />\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n};\n\nexport default TodoForm;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMnD,MAAMC,QAAiC,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAE5C,MAAMS,YAAY,GAAIC,CAAsC,IAAK;IAC/DF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,YAAY,GAAIH,CAAmC,IAAK;IAC5DA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAIP,IAAI,CAACQ,IAAI,CAAC,CAAC,EAAE;MACfV,OAAO,CAACE,IAAI,CAAC;MACbC,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;EAEDP,SAAS,CAAC,MAAM;IACde,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,OAAO,MAAM;MACXD,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACnC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA;IAAMe,QAAQ,EAAEL,YAAa;IAAAM,QAAA,gBAC3BhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXR,KAAK,EAAEL,IAAK;MACZc,QAAQ,EAAEZ,YAAa;MACvBa,WAAW,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFvB,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEX,CAAC;AAACpB,EAAA,CAjCIF,QAAiC;AAAAuB,EAAA,GAAjCvB,QAAiC;AAmCvC,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}