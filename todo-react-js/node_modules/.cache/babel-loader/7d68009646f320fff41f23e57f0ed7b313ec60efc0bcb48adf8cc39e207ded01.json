{"ast":null,"code":"var _jsxFileName = \"/home/ideas2it/Project_html/react-js/todo-react-js/src/app-context.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, createContext } from \"react\";\nimport \"./style.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APP_URL = \"http://localhost:8080/todo\";\nexport const AppContext = /*#__PURE__*/createContext({});\nconst AppContextProvider = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [task, setTask] = useState(\"\");\n  const addTask = useCallback(() => {\n    if (task.trim()) {\n      axios.post(APP_URL, {\n        name: task,\n        completed: false\n      }).then(response => {\n        setTasks([...tasks, response.data]);\n        setTask(\"\");\n      }).catch(error => console.error(\"Error adding task:\", error));\n    }\n  }, [task, tasks]);\n  const deleteTask = useCallback(index => {\n    const taskToDelete = tasks[index];\n    axios.delete(`${APP_URL}/${index}`).then(() => {\n      setTasks(tasks.filter((_, i) => i !== index));\n    }).catch(error => console.error(\"Error deleting task:\", error));\n  }, [tasks]);\n  const toggleTask = useCallback(index => {\n    const updatedTask = {\n      ...tasks[index],\n      completed: !tasks[index].completed\n    };\n    axios.put(`${APP_URL}/${index}`, updatedTask).then(response => {\n      setTasks(tasks.map((task, i) => i === index ? response.data : task));\n    }).catch(error => console.error(\"Error updating task:\", error));\n  }, [tasks]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      tasks,\n      task,\n      addTask,\n      deleteTask,\n      toggleTask\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n_s(AppContextProvider, \"EEDB9YYWzX6k5TT/gI5A1J+gX9A=\");\n_c = AppContextProvider;\nexport default AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["React","useState","useCallback","createContext","axios","jsxDEV","_jsxDEV","APP_URL","AppContext","AppContextProvider","_s","tasks","setTasks","task","setTask","addTask","trim","post","name","completed","then","response","data","catch","error","console","deleteTask","index","taskToDelete","delete","filter","_","i","toggleTask","updatedTask","put","map","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ideas2it/Project_html/react-js/todo-react-js/src/app-context.jsx"],"sourcesContent":["import React, { useState, useCallback, createContext } from \"react\";\nimport \"./style.css\";\nimport axios from \"axios\";\n\nconst APP_URL = \"http://localhost:8080/todo\";\n\nexport const AppContext = createContext({});\n\nconst AppContextProvider = () => {\n  const [tasks, setTasks] = useState([]);\n  const [task, setTask] = useState(\"\");\n\n  const addTask = useCallback(() => {\n    if (task.trim()) {\n      axios.post(APP_URL, { name: task, completed: false })\n        .then(response => {\n          setTasks([...tasks, response.data]);\n          setTask(\"\");\n        })\n        .catch(error => console.error(\"Error adding task:\", error));\n    }\n  }, [task, tasks]);\n\n  const deleteTask = useCallback((index) => {\n    const taskToDelete = tasks[index];\n    axios.delete(`${APP_URL}/${index}`)\n      .then(() => {\n        setTasks(tasks.filter((_, i) => i !== index));\n      })\n      .catch(error => console.error(\"Error deleting task:\", error));\n  }, [tasks]);\n\n  const toggleTask = useCallback((index) => {\n    const updatedTask = { ...tasks[index], completed: !tasks[index].completed };\n    axios.put(`${APP_URL}/${index}`, updatedTask)\n      .then(response => {\n        setTasks(tasks.map((task, i) => (i === index ? response.data : task)));\n      })\n      .catch(error => console.error(\"Error updating task:\", error));\n  }, [tasks]);\n\n  return <AppContext.Provider value={{\n    tasks,\n    task,\n    addTask,\n    deleteTask,\n    toggleTask\n  }}></AppContext.Provider>;\n};\n\nexport default AppContextProvider;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,aAAa,QAAQ,OAAO;AACnE,OAAO,aAAa;AACpB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAG,4BAA4B;AAE5C,OAAO,MAAMC,UAAU,gBAAGL,aAAa,CAAC,CAAC,CAAC,CAAC;AAE3C,MAAMM,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMc,OAAO,GAAGb,WAAW,CAAC,MAAM;IAChC,IAAIW,IAAI,CAACG,IAAI,CAAC,CAAC,EAAE;MACfZ,KAAK,CAACa,IAAI,CAACV,OAAO,EAAE;QAAEW,IAAI,EAAEL,IAAI;QAAEM,SAAS,EAAE;MAAM,CAAC,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAI;QAChBT,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEU,QAAQ,CAACC,IAAI,CAAC,CAAC;QACnCR,OAAO,CAAC,EAAE,CAAC;MACb,CAAC,CAAC,CACDS,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC,CAAC;IAC/D;EACF,CAAC,EAAE,CAACX,IAAI,EAAEF,KAAK,CAAC,CAAC;EAEjB,MAAMe,UAAU,GAAGxB,WAAW,CAAEyB,KAAK,IAAK;IACxC,MAAMC,YAAY,GAAGjB,KAAK,CAACgB,KAAK,CAAC;IACjCvB,KAAK,CAACyB,MAAM,CAAC,GAAGtB,OAAO,IAAIoB,KAAK,EAAE,CAAC,CAChCP,IAAI,CAAC,MAAM;MACVR,QAAQ,CAACD,KAAK,CAACmB,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKL,KAAK,CAAC,CAAC;IAC/C,CAAC,CAAC,CACDJ,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,CAACb,KAAK,CAAC,CAAC;EAEX,MAAMsB,UAAU,GAAG/B,WAAW,CAAEyB,KAAK,IAAK;IACxC,MAAMO,WAAW,GAAG;MAAE,GAAGvB,KAAK,CAACgB,KAAK,CAAC;MAAER,SAAS,EAAE,CAACR,KAAK,CAACgB,KAAK,CAAC,CAACR;IAAU,CAAC;IAC3Ef,KAAK,CAAC+B,GAAG,CAAC,GAAG5B,OAAO,IAAIoB,KAAK,EAAE,EAAEO,WAAW,CAAC,CAC1Cd,IAAI,CAACC,QAAQ,IAAI;MAChBT,QAAQ,CAACD,KAAK,CAACyB,GAAG,CAAC,CAACvB,IAAI,EAAEmB,CAAC,KAAMA,CAAC,KAAKL,KAAK,GAAGN,QAAQ,CAACC,IAAI,GAAGT,IAAK,CAAC,CAAC;IACxE,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,CAACb,KAAK,CAAC,CAAC;EAEX,oBAAOL,OAAA,CAACE,UAAU,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MACjC3B,KAAK;MACLE,IAAI;MACJE,OAAO;MACPW,UAAU;MACVO;IACF;EAAE;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAsB,CAAC;AAC3B,CAAC;AAAChC,EAAA,CAxCID,kBAAkB;AAAAkC,EAAA,GAAlBlC,kBAAkB;AA0CxB,eAAeA,kBAAkB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}