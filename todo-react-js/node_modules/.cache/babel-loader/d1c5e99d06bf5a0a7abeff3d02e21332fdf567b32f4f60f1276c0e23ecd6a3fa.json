{"ast":null,"code":"var _jsxFileName = \"/home/ideas2it/Project_html/react-js/todo-react-js/src/Login.jsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppContext } from \"./app-context\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    login\n  } = useContext(AppContext);\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    e.preventDefault();\n    const originalUsername = 'vignesh@test.com';\n    const originalPassword = 'test123';\n    if (username === originalUsername && password === originalPassword) {\n      login();\n      navigate(\"/todo\");\n    } else {\n      alert('Invalid credentials');\n    }\n    setUsername('');\n    setPassword('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"login-button\",\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"DroCcwIAxVtGEBmpmJt/aQB1vCM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useContext","useNavigate","AppContext","jsxDEV","_jsxDEV","Login","_s","login","navigate","handleLogin","e","preventDefault","originalUsername","originalPassword","username","password","alert","setUsername","setPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/ideas2it/Project_html/react-js/todo-react-js/src/Login.jsx"],"sourcesContent":["import { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppContext } from \"./app-context\";\nimport \"./style.css\";\n\nconst Login = () => {\n  const { login } = useContext(AppContext);\n  const navigate = useNavigate();\n\n  const handleLogin = () => {\n\n    e.preventDefault();\n\n    const originalUsername = 'vignesh@test.com';\n    const originalPassword = 'test123';\n\n    if (username === originalUsername && password === originalPassword) {\n      login();\n      navigate(\"/todo\");\n    } else {\n      alert('Invalid credentials');\n    }\n\n    setUsername('');\n    setPassword('');\n  };\n\n  return (\n    <div className=\"login-page\">\n      <h2>Login</h2>\n      <button className=\"login-button\" onClick={handleLogin}>Login</button>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAM,CAAC,GAAGP,UAAU,CAACE,UAAU,CAAC;EACxC,MAAMM,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IAExBC,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,gBAAgB,GAAG,kBAAkB;IAC3C,MAAMC,gBAAgB,GAAG,SAAS;IAElC,IAAIC,QAAQ,KAAKF,gBAAgB,IAAIG,QAAQ,KAAKF,gBAAgB,EAAE;MAClEN,KAAK,CAAC,CAAC;MACPC,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,MAAM;MACLQ,KAAK,CAAC,qBAAqB,CAAC;IAC9B;IAEAC,WAAW,CAAC,EAAE,CAAC;IACfC,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBhB,OAAA;MAAAgB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdpB,OAAA;MAAQe,SAAS,EAAC,cAAc;MAACM,OAAO,EAAEhB,WAAY;MAAAW,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV,CAAC;AAAClB,EAAA,CA5BID,KAAK;EAAA,QAEQJ,WAAW;AAAA;AAAAyB,EAAA,GAFxBrB,KAAK;AA8BX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}